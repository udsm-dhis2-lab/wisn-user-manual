{"remainingRequest":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js??ref--11-1!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/ibrahim/Git Repositories/wisn-user-manual/docs/moh/home/home-moh.md","dependencies":[{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/docs/moh/home/home-moh.md","mtime":1665386505666},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-moh-home-home-moh-md-e8a.json","mtime":1665387421378},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/cache-loader/dist/cjs.js","mtime":1664444631033},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js","mtime":1664444610960},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1664444624796},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1664444627409}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}