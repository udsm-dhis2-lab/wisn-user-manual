{"remainingRequest":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js??ref--11-1!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/ibrahim/Git Repositories/wisn-user-manual/docs/LGA_Permit_Request/Priotized_Allocation.md","dependencies":[{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/docs/LGA_Permit_Request/Priotized_Allocation.md","mtime":1638182808346},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-lga-permit-request-priotized-allocation-md-128.json","mtime":1665387421378},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/cache-loader/dist/cjs.js","mtime":1664444631033},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js","mtime":1664444610960},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1664444624796},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1664444627409}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvaWJyYWhpbS9HaXQgUmVwb3NpdG9yaWVzL3dpc24tdXNlci1tYW51YWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonbGdhLXByaW9yaXRpemVkLWFsbG9jYXRpb24nLHRpdGxlOidMR0EgUHJpb3JpdGl6ZWQgQWxsb2NhdGlvbid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJMR0FfUGVybWl0X1JlcXVlc3QvbGdhLXByaW9yaXRpemVkLWFsbG9jYXRpb24iLCJpZCI6IkxHQV9QZXJtaXRfUmVxdWVzdC9sZ2EtcHJpb3JpdGl6ZWQtYWxsb2NhdGlvbiIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJMR0EgUHJpb3JpdGl6ZWQgQWxsb2NhdGlvbiIsImRlc2NyaXB0aW9uIjoiVGhlIHN5c3RlbSB3aWxsIGRpc3BsYXkgYSBuZXcgUFJJIGxpc3Qgd2hpY2ggdGFrZXMgaW50byBhY2NvdW50IHRoZSBVQUMgcGVybWl0IHJlcXVlc3RzLiBGcm9tIHRoZSB0b3RhbCBidWRnZXQsIGNvc3QgZm9yIFVBQyB3aWxsIGJlIGRlZHVjdGVkIGFuZCB0aGUgcmVtYWluaW5nIGFtb3VudCB3aWxsIGJlIHVzZWQgdG8gYXNzaWduIHRoZSBwZXJtaXQgcmVxdWVzdCBiYXNlZCBvbiBQUkkiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL0xHQV9QZXJtaXRfUmVxdWVzdC9QcmlvdGl6ZWRfQWxsb2NhdGlvbi5tZCIsInNsdWciOiIvTEdBX1Blcm1pdF9SZXF1ZXN0L2xnYS1wcmlvcml0aXplZC1hbGxvY2F0aW9uIiwicGVybWFsaW5rIjoiL3dpc24tdXNlci1tYW51YWwvZG9jcy9MR0FfUGVybWl0X1JlcXVlc3QvbGdhLXByaW9yaXRpemVkLWFsbG9jYXRpb24iLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3Vkc20tZGhpczItcHJvamVjdC93aXNuLXVzZXItbWFudWFsL2VkaXQvbWFpbi9kb2NzL0xHQV9QZXJtaXRfUmVxdWVzdC9QcmlvdGl6ZWRfQWxsb2NhdGlvbi5tZCIsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJMR0EgVXNlciBBc3Npc3RlZCBDYWRyZSAoVUFDKSIsInBlcm1hbGluayI6Ii93aXNuLXVzZXItbWFudWFsL2RvY3MvTEdBX1Blcm1pdF9SZXF1ZXN0L2xnYS11c2VyLWFzc2lzdGVkLWNhZHJlIn0sIm5leHQiOnsidGl0bGUiOiJQZXJtaXQgT3ZlcnZpZXcgTEdBIiwicGVybWFsaW5rIjoiL3dpc24tdXNlci1tYW51YWwvZG9jcy9MR0FfUGVybWl0X1JlcXVlc3QvcGVybWl0LW92ZXJ2aWV3LWxnYSJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7bGV0e2NvbXBvbmVudHMsLi4ucHJvcHN9PV9yZWY7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBUaGUgc3lzdGVtIHdpbGwgZGlzcGxheSBhIG5ldyBQUkkgbGlzdCB3aGljaCB0YWtlcyBpbnRvIGFjY291bnQgdGhlIFVBQyBwZXJtaXQgcmVxdWVzdHMuIEZyb20gdGhlIHRvdGFsIGJ1ZGdldCwgY29zdCBmb3IgVUFDIHdpbGwgYmUgZGVkdWN0ZWQgYW5kIHRoZSByZW1haW5pbmcgYW1vdW50IHdpbGwgYmUgdXNlZCB0byBhc3NpZ24gdGhlIHBlcm1pdCByZXF1ZXN0IGJhc2VkIG9uIFBSSWApLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiaW1nIGFsdCIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS9ob21lL2licmFoaW0vR2l0IFJlcG9zaXRvcmllcy93aXNuLXVzZXItbWFudWFsL3N0YXRpYy9pbWcvbGdhX3ByaW9fYWxsbzEucG5nIikuZGVmYXVsdH0pKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSxgICAgICAgICAgRmlndXJlIDMyOiBQcmlvcml0aXplZCBBbGxvY2F0aW9uCmApKSxtZHgoInAiLG51bGwsYE9uIGFzc2lnbm1lbnQgZGVzaWduYXRpb24gdXNlciBjYW4gbWFudWFsbHkgYXNzaWduIGFuZCByZWFzc2lnbiB0aGUgcmVxdWVzdCBwZXJtaXRzYCksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJpbWcgYWx0IixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhL2hvbWUvaWJyYWhpbS9HaXQgUmVwb3NpdG9yaWVzL3dpc24tdXNlci1tYW51YWwvc3RhdGljL2ltZy9sZ2FfcHJpb19hbGxvMi5wbmciKS5kZWZhdWx0fSkpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LGAgICAgICAgICBGaWd1cmUgMzM6IEFzc2lnbm1lbnQgRGVzaWduYXRpb24KYCkpLG1keCgicCIsbnVsbCxgT24gdG9wIG9mIHRoZSB0YWJsZSwgdGhlcmUgaXMgdHdvIGFkZGl0aW9uYWwgYnV0dG9ucyB0aGF0IGFyZSBub3QgcHJlc2VudCBpbiB0aGUgUFJJIG9wdGltaXphdGlvbiBzdGFnZSwgY2FkcmUgdmlldyBhbmQgZmFjaWxpdHkgdmlldy5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyBhbHQiLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEvaG9tZS9pYnJhaGltL0dpdCBSZXBvc2l0b3JpZXMvd2lzbi11c2VyLW1hbnVhbC9zdGF0aWMvaW1nL2xnYV9wcmlvX2FsbG8zLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgICAgICAgIEZpZ3VyZSAzNDogU2VsZWN0aW5nIENhZHJlIGFuZCBGYWNpbGl0eSBWaWV3CiAgICAgICAgCmApKSxtZHgoInAiLG51bGwsYFdpdGggY2FkcmUgdmlldywgcGVybWl0IHJlcXVlc3QgaXMgYmVpbmcgc3VtbWFyaXplZCBmcm9tIGEgY2FkcmUgcGVyc3BlY3RpdmUgd2hpbGUgb24gZmFjaWxpdHkgdmlldyB0aGUgc3VtbWFyeSBpcyBmcm9tIHRoZSBmYWNpbGl0eSBwZXJzcGVjdGl2ZS5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyBhbHQiLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEvaG9tZS9pYnJhaGltL0dpdCBSZXBvc2l0b3JpZXMvd2lzbi11c2VyLW1hbnVhbC9zdGF0aWMvaW1nL2xnYV9wcmlvX2FsbG80LnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgICAgICAgIEZpZ3VyZSAzNTogQ2FkcmUgVmlldyBQZXJtaXQgUmVxdWVzdCBBbGxvY2F0aW9uCmApKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyBhbHQiLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEvaG9tZS9pYnJhaGltL0dpdCBSZXBvc2l0b3JpZXMvd2lzbi11c2VyLW1hbnVhbC9zdGF0aWMvaW1nL2xnYV9wcmlvX2FsbG81LnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIn0sYCAgICAgICAgIEZpZ3VyZSAzNjogRmFjaWxpdHkgVmlldyBQZXJtaXQgUmVxdWVzdCBBbGxvY2F0aW9uCiAgICAgICAgCmApKSxtZHgoInAiLG51bGwsYEFmdGVyIHRoZSBMR0EgdXNlciBpcyBzYXRpc2ZpZWQgd2l0aCBwZXJtaXQgcmVxdWVzdCBtYWRlLCBjbGlja2luZyB0aGUgY29uZmlybSBidXR0b24gd2lsbCB0ZXJtaW5hdGUgdGhlIHByb2Nlc3MgYW5kIGl0IHdpbGwgYXBwZWFyIG9uIHRoZSBmaXJzdCBwYWdlIG9mIHRoZSBwZXJtaXQgcmVxdWVzdCBwcm9jZXNzIGFzIGEgY29tcGxldGVkIHJlcXVlc3QuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJpbWcgYWx0IixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhL2hvbWUvaWJyYWhpbS9HaXQgUmVwb3NpdG9yaWVzL3dpc24tdXNlci1tYW51YWwvc3RhdGljL2ltZy9sZ2FfcHJpb19hbGxvNi5wbmciKS5kZWZhdWx0fSkpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LGAgICAgICAgICBGaWd1cmUgMzc6IENvbmZpcm1pbmcgUGVybWl0IFJlcXVlc3RzIApgKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}