{"remainingRequest":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js??ref--11-1!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/ibrahim/Git Repositories/wisn-user-manual/docs/ad-hoc/final-allocation.md","dependencies":[{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/docs/ad-hoc/final-allocation.md","mtime":1665042851808},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-ad-hoc-final-allocation-md-c94.json","mtime":1665387421378},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/cache-loader/dist/cjs.js","mtime":1664444631033},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/babel-loader/lib/index.js","mtime":1664444610960},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1664444624796},{"path":"/home/ibrahim/Git Repositories/wisn-user-manual/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1664444627409}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvaWJyYWhpbS9HaXQgUmVwb3NpdG9yaWVzL3dpc24tdXNlci1tYW51YWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonZmluYWwtYWxsb2NhdGlvbicsdGl0bGU6J0ZpbmFsIEFsbG9jYXRpb24nfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoiYWQtaG9jL2ZpbmFsLWFsbG9jYXRpb24iLCJpZCI6ImFkLWhvYy9maW5hbC1hbGxvY2F0aW9uIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkZpbmFsIEFsbG9jYXRpb24iLCJkZXNjcmlwdGlvbiI6IlRoZSBzeXN0ZW0gd2lsbCBkaXNwbGF5IGEgc3VtbWFyeSBvZiBGQUMgYW5kIFVBQyBhbGxvY2F0aW9uIHBlcm1pdHMgYXMgcGVyIExHQS4gQW5kIGl0IGlzIGluIHRoaXMgcHJvY2VzcyB1c2VycyBjYW4gIGFwcGx5IGNvbnN0cmFpbnRzIHdoaWNoIGFmZmVjdCBwcmV2aW91c2x5IGFsbG9jYXRlZCBGQUMgcGVybWl0cyBpbiBzcGVjaWZpYyBMR0Egb3IgZXZlbiBuYXRpb25hbCBvbmVzIC4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2FkLWhvYy9maW5hbC1hbGxvY2F0aW9uLm1kIiwic2x1ZyI6Ii9hZC1ob2MvZmluYWwtYWxsb2NhdGlvbiIsInBlcm1hbGluayI6Ii93aXNuLXVzZXItbWFudWFsL2RvY3MvYWQtaG9jL2ZpbmFsLWFsbG9jYXRpb24iLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3Vkc20tZGhpczItcHJvamVjdC93aXNuLXVzZXItbWFudWFsL2VkaXQvbWFpbi9kb2NzL2FkLWhvYy9maW5hbC1hbGxvY2F0aW9uLm1kIiwidmVyc2lvbiI6ImN1cnJlbnQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IlVzZXIgQXNzaXN0ZWQgQ2FkcmUgKFVBQykiLCJwZXJtYWxpbmsiOiIvd2lzbi11c2VyLW1hbnVhbC9kb2NzL2FkLWhvYy91c2VyLWFzc2lzdGVkLWNhZHJlIn0sIm5leHQiOnsidGl0bGUiOiJNYW5hZ2luZyBDYWRyZXMiLCJwZXJtYWxpbmsiOiIvd2lzbi11c2VyLW1hbnVhbC9kb2NzL3N5c3RlbS9jYWRyZSJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7bGV0e2NvbXBvbmVudHMsLi4ucHJvcHN9PV9yZWY7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBUaGUgc3lzdGVtIHdpbGwgZGlzcGxheSBhIHN1bW1hcnkgb2YgRkFDIGFuZCBVQUMgYWxsb2NhdGlvbiBwZXJtaXRzIGFzIHBlciBMR0EuIEFuZCBpdCBpcyBpbiB0aGlzIHByb2Nlc3MgdXNlcnMgY2FuICBhcHBseSBjb25zdHJhaW50cyB3aGljaCBhZmZlY3QgcHJldmlvdXNseSBhbGxvY2F0ZWQgRkFDIHBlcm1pdHMgaW4gc3BlY2lmaWMgTEdBIG9yIGV2ZW4gbmF0aW9uYWwgb25lcyAuYCksbWR4KCJoNCIseyJpZCI6Im92ZXJ2aWV3In0sYE92ZXJ2aWV3YCksbWR4KCJwIixudWxsLGBUaGlzIHBhZ2UgQ29udGFpbnMgdGhlIExpc3Qgb2YgVXNlciBhc3Npc3RlZCBDYWRyZXMgKFVBQykgYW5kIEZ1bGx5IGF1dG9tYXRlZCBDYWRyZSAoRkFDKSBpbiBMR0EgYmFzaXMsIHdoZXJlIGJ5IHN5c3RlbSBhbGxvY2F0aW9ucyBhcmUgZGVmYXVsdCBhc3NpZ25tZW50cyBiZWZvcmUgYXBwbHlpbmcgZmluYWwgY29uc3RyYWludHMgYW5kIGN1c3RvbSBhbGxvY2F0aW9ucyBhcmUgbmV3IGFzc2lnbm1lbnRzIGFmdGVyIGFwcGx5aW5nIGZpbmFsIGNvbnN0cmFpbnRzLmApLG1keCgicCIsbnVsbCxgVGhlIHZpZXcgYnV0dG9uIGluIHRoZSBjdXN0b20gYWxsb2NhdGlvbiBjb2x1bW4gcHJvdmlkZXMgYSByb29tIGZvciB1c2VycyB0byBzZWUgYWxsIHBlcm1pdHMgYXNzaWduZWQgb24gdGhhdCBwYXJ0aWN1bGFyIExHQSAgd2hldGhlciBpdCBpcyBGQUMgb3IgVUFDLmApLG1keCgicCIsbnVsbCxgVGhlcmUgaXMgYWxzbyBhIFNob3cgY2FkcmUgdmlldyBidXR0b24gd2hpY2ggZ2l2ZXMgc3VtbWFyeSBvZiBhbGwgY2FkcmUgd2hpY2ggaGF2ZSBiZWVuIGFzc2lnbmVkIHdpdGggbmV3IHBlcm1pdHMgZ2VuZXJhbGx5IHdpdGhvdXQgc3BlY2lmeWluZyB0aGV5IHBlcm1pdHMgYmVsb25ncyB0byB3aGljaCBMR0EuYCksbWR4KCJoNCIseyJpZCI6ImNvbnN0cmFpbnRzIn0sYENvbnN0cmFpbnRzYCksbWR4KCJwIixudWxsLGBGaW5hbCBjb25zdHJhaW50cyBhcmUgb2YgZGlmZmVyZW50IHNjZW5hcmlvcyBuYXRpb25hbGx5IGFuZCBMR0EgYmFzZWQuIEZvciBMR0EgdXNlcnMgY2FuIHNldCBjYXAgb24gYW1vdW50IGJ5IExHQSwgY2FwIG9uIGFtb3VudCBwZXIgY2FkcmUgYnkgTEdBIGFuZCBjYXAgb24gc3VwcGx5IGNhZHJlIHBlciBMR0EuIEFkZCBjb25zdHJhaW50IGJ1dHRvbiB3aWxsIGFsbG93IHRoZSB1c2VyIHRvIGNob29zZSBiZXR3ZWVuIE5hdGlvbmFsIG9yIExBR0EgYW5kIHRoZW4gc2V0IHRoZSBzcGVjaWZpY3MuYCksbWR4KCJwIixudWxsLGBPbmNlIHNlbGVjdCBMR0EgY29uc3RyYWludCwgVXNlciB3aWxsIHNlbGVjdCBMR0EgZm9yIGNvbnN0cmFpbnQgdG8gdGFrZSBlZmZlY3QgYW5kIHR5cGUgb2YgTEdBIGNvbnN0cmFpbnQsIGFuZCB0aGVuIHByb3ZpZGUgdGhlIG51bWJlciBiYXNlZCBvbiB0eXBlIG9mIGNvbnN0cmFpbnQgaWYgaXQgcmVsYXRlcyB0byBjYWRyZSB0aGV5IHNob3VsZCBzZWxlY3QgdGhhdCBjYWRyZSBmaXJzdC4gSW4gb3JkZXIgdG8gc2F2ZSB0aGUgY29uc3RyYWludCwgdGhlIHVzZXIgc2hvdWxkIHByZXNzIHRoZSBjb25maXJtIGJ1dHRvbi5gKSxtZHgoInAiLG51bGwsYE9uY2UgY29uc3RyYWludHMgaGF2ZSBiZWVuIGNvbmZpcm1lZCBpdCB3aWxsIGFwcGVhciBpbiBhIGxpc3QsIGFuZCBhYm92ZSB0aGUgbGlzdCB0aGVyZSBpcyBhbiBhcHBseSBDb25zdHJhaW50IGJ1dHRvbiB3aGljaCBjb21tYW5kcyB0aGUgc3lzdGVtIHRvIGFmZmVjdCB0aGUgY2hhbmdlcyBpbiB0aGUgcHJldmlvdXMgYWxsb2NhdGlvbnMuYCksbWR4KCJwIixudWxsLGBJZiBhcHBsaWNhdGlvbiBvZiBjb25zdHJhaW50cyBjaGFuZ2VzIHRoZSBwcmV2aW91cyBhbGxvY2F0aW9uIGJ5IHJlZHVjaW5nIHNvbWUgcGVybWl0cyBpbiBzb21lIExHQSwgb3IgYnkgaW50cm9kdWNpbmcgbmV3IHBlcm1pdHMgaW4gTmV3IExHQSB0aGVuIHRob3NlIGNoYW5nZXMgY2FuIGJlIHRyYWNrZWQgaW4gdGhlIG92ZXJ2aWV3IHBhZ2Ugc3BlY2lmaWNhbGx5IG9uIG51bWJlciBvZiByb3dzKGxpc3Qgb2YgTEdBKSBhbmQgQ3VzdG9tIGFsbG9jYXRpb24gY29sdW1uLmApLG1keCgicCIsbnVsbCxgSW4gdGhlIGZpbmFsIGFsbG9jYXRpb24gdGhlcmUgaXMgb25seSBvbmUgbmF0aW9uYWwgY29uc3RyYWludCB1c2UgY2FuIHNldCB3aGljaCBpcyBjYXAgb24gYW1vdW50IHNwZW50IGJ5IGNhZHJlYCksbWR4KCJwIixudWxsLGBXaGlsZSBzZXR0aW5nIHRob3NlIGNvbnN0cmFpbnRzLCB0aGVyZSBhcmUgc29tZSBjaGVja3MgYXMgaW5kaWNhdGVkIGJlbG93LCAgaWYgdGhlIHVzZXIgd2lsbCBwdXQgc29tZSB2YWx1ZXMvbnVtYmVyIGRldmlhdGluZyB0aGUgY2hlY2tzLCB0aGUgc3lzdGVtIHdpbGwgcmVqZWN0IHRoZSBjb25zdHJhaW50IGFuZCBwcm9tcHQgdGhlIHVzZXIgd2l0aCBhIHdhcm5pbmcgbWVzc2FnZSBhbmQgc2VlIGV4YW1wbGUgaW4gZmlndXJlIGJlbG93LmApLG1keCgiaDUiLHsiaWQiOiJzY2VuYXJpby0xIn0sYFNjZW5hcmlvIDFgKSxtZHgoInAiLG51bGwsYExHQSBidWRnZXQgY29uZmxpY3RpbmcgTmF0aW9uYWwgQnVkZ2V0IC0gQW4gTEdBIGJ1ZGdldCBmb3IgYSBzcGVjaWZpYyBjYWRyZSBzaG91bGQgbm90IGNvbmZsaWN0IHRoZSBOYXRpb25hbCBCdWRnZXQgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGFzc2lnbmVkIHRvIGEgY2FkcmVgKSxtZHgoImg1Iix7ImlkIjoic2NlbmFyaW8tMiJ9LGBTY2VuYXJpbyAyYCksbWR4KCJwIixudWxsLGBNaW5pbXVtIG9mIGNhcCBhbW91bnQgcGVyIExHQSBzaG91bGQgYmUgMCBvciBncmVhdGVyIHRoYW4gdGhlIGxvd2VzdCBvZiBjYWRyZSBhbm51YWwgc2FsYXJ5YCksbWR4KCJoNSIseyJpZCI6InNjZW5hcmlvLTMifSxgU2NlbmFyaW8gM2ApLG1keCgicCIsbnVsbCxgTWluaW11bSBvZiBjYXAgYW1vdW50IHBlciBjYWRyZSBieSBMR0Egc2hvdWxkIGJlIDAgb3IgZ3JlYXRlciB0aGFuIGl0cyBjYWRyZSBhbm51YWwgc2FsYXJ5YCksbWR4KCJoNSIseyJpZCI6InNjZW5hcmlvLTQifSxgU2NlbmFyaW8gNGApLG1keCgicCIsbnVsbCxgY2FwIHN1cHBseSBwZXIgY2FkcmUgc2hvdWxkIGJlIGxlc3Mgb3IgZXF1YWwgdG8gbmF0aW9uYWwgdG90YWwgbWF4aW11bSBhdmFpbGFibGVgKSxtZHgoImg1Iix7ImlkIjoic2NlbmFyaW8tNSJ9LGBTY2VuYXJpbyA1YCksbWR4KCJwIixudWxsLGBJZiBjYXAgb24gYW1vdW50IGJ5IExHQSBpcyBvIHRoZW4gdGhlcmUgc2hvdWxkIGJlIDAgYW1vdW50IHBlciBjYWRyZSBieSBMR0EgYW5kIDAgY2FwIHN1cHBseSBwZXIgY2FkcmUgaW4gdGhhdCBwYXJ0aWN1bGFyIExHQWApLG1keCgiaDUiLHsiaWQiOiJzY2VuYXJpby02In0sYFNjZW5hcmlvIDZgKSxtZHgoInAiLG51bGwsYENhcCBvbiBhbW91bnQgYnkgTEdBIHNob3VsZCBub3QgZXhjZWVkIE5hdGlvbmFsIGJ1ZGdldGApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}