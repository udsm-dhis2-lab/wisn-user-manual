{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{170:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return u})),n.d(t,\"b\",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),d=function(e){var t=a.a.useContext(c),n=t;return e&&(n=\"function\"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=d(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:\"code\",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),u=d(n),f=i,h=u[\"\".concat(o,\".\").concat(f)]||u[f]||p[f]||r;return n?a.a.createElement(h,s(s({ref:t},c),{},{components:n})):a.a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if(\"string\"==typeof e||i){var r=n.length,o=new Array(r);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}f.displayName=\"MDXCreateElement\"},92:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return r})),n.d(t,\"metadata\",(function(){return o})),n.d(t,\"toc\",(function(){return s})),n.d(t,\"default\",(function(){return c}));var i=n(3),a=(n(0),n(170));const r={id:\"facilities\",title:\"Facilities\"},o={unversionedId:\"ad-hoc/facilities\",id:\"ad-hoc/facilities\",isDocsHomePage:!1,title:\"Facilities\",description:\"On this stage,  procedures are just the same as ones in permit allocation module.On adding a new Facility. The facility should be the one created in the last 15 Months.New need to be Average of existing HRH by LG (National for Full operational District Hospitals and Partial operational District hospitals) for each new cadre belongs to that facility type .Also there is a need to update WISN Report so as to have new average need.And lastly tuser will be displayed with the PRI of the new facility based on new average need and its existing HRH.\",source:\"@site/docs/ad-hoc/facilities.md\",slug:\"/ad-hoc/facilities\",permalink:\"/wisn-user-manual/docs/ad-hoc/facilities\",editUrl:\"https://github.com/udsm-dhis2-project/wisn-user-manual/edit/main/docs/ad-hoc/facilities.md\",version:\"current\",sidebar:\"someSidebar\",previous:{title:\"Approved Cadres\",permalink:\"/wisn-user-manual/docs/ad-hoc/approved-cadres\"},next:{title:\"Initial Optimization\",permalink:\"/wisn-user-manual/docs/ad-hoc/initial-optimization\"}},s=[],l={toc:s};function c(e){let{components:t,...n}=e;return Object(a.b)(\"wrapper\",Object(i.a)({},l,n,{components:t,mdxType:\"MDXLayout\"}),Object(a.b)(\"p\",null,\"On this stage,  procedures are just the same as ones in permit allocation module.On adding a new Facility. The facility should be the one created in the last 15 Months.New need to be Average of existing HRH by LG (National for Full operational District Hospitals and Partial operational District hospitals) for each new cadre belongs to that facility type .Also there is a need to update WISN Report so as to have new average need.And lastly tuser will be displayed with the PRI of the new facility based on new average need and its existing HRH.\"),Object(a.b)(\"p\",null,\"Process of adding or upgrading facilities, user should first LGA where the facility is by typing the name of that LGA\"),Object(a.b)(\"p\",null,\"Once LGA is selected , user should go to right side if it is about adding new facility or go to let side if its about upgrading the facility and made the selection of facility type accordingly so to get displayed with list of facilities in that group.\"),Object(a.b)(\"p\",null,\"Once you select number of facility (user is free to select more than one), there's a select button at the bottom right. \"),Object(a.b)(\"p\",null,\"Once finish the exercise of selecting facilities to be added and upgraded then, user will be able to see the summary of number of facilities  before pressing the confirmation button on the bottom right\"),Object(a.b)(\"p\",null,\"Then once confirmed the list of all LGA involved in the process will be displayed showing number of new facilities, upgraded facilities,  total HRH need and total annual budget cost. Then to make effect of those changes, user should press save changes button which automatically triggers the analytics.\"),Object(a.b)(\"p\",null,\"Through view functionality, users can also view where the HRH need comes from and budget by navigating to the action button and selecting the view.\"))}c.isMDXComponent=!0}}]);","name":"29e793a8.2250e88f.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[22],{\n\n/***/ 170:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _home_ibrahim_Git_Repositories_wisn_user_manual_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(170);\nconst frontMatter={id:'facilities',title:'Facilities'};const metadata={\"unversionedId\":\"ad-hoc/facilities\",\"id\":\"ad-hoc/facilities\",\"isDocsHomePage\":false,\"title\":\"Facilities\",\"description\":\"On this stage,  procedures are just the same as ones in permit allocation module.On adding a new Facility. The facility should be the one created in the last 15 Months.New need to be Average of existing HRH by LG (National for Full operational District Hospitals and Partial operational District hospitals) for each new cadre belongs to that facility type .Also there is a need to update WISN Report so as to have new average need.And lastly tuser will be displayed with the PRI of the new facility based on new average need and its existing HRH.\",\"source\":\"@site/docs/ad-hoc/facilities.md\",\"slug\":\"/ad-hoc/facilities\",\"permalink\":\"/wisn-user-manual/docs/ad-hoc/facilities\",\"editUrl\":\"https://github.com/udsm-dhis2-project/wisn-user-manual/edit/main/docs/ad-hoc/facilities.md\",\"version\":\"current\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Approved Cadres\",\"permalink\":\"/wisn-user-manual/docs/ad-hoc/approved-cadres\"},\"next\":{\"title\":\"Initial Optimization\",\"permalink\":\"/wisn-user-manual/docs/ad-hoc/initial-optimization\"}};/* @jsxRuntime classic */ /* @jsx mdx */const toc=[];const layoutProps={toc};const MDXLayout=\"wrapper\";function MDXContent(_ref){let{components,...props}=_ref;return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(MDXLayout,Object(_home_ibrahim_Git_Repositories_wisn_user_manual_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`On this stage,  procedures are just the same as ones in permit allocation module.On adding a new Facility. The facility should be the one created in the last 15 Months.New need to be Average of existing HRH by LG (National for Full operational District Hospitals and Partial operational District hospitals) for each new cadre belongs to that facility type .Also there is a need to update WISN Report so as to have new average need.And lastly tuser will be displayed with the PRI of the new facility based on new average need and its existing HRH.`),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Process of adding or upgrading facilities, user should first LGA where the facility is by typing the name of that LGA`),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Once LGA is selected , user should go to right side if it is about adding new facility or go to let side if its about upgrading the facility and made the selection of facility type accordingly so to get displayed with list of facilities in that group.`),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Once you select number of facility (user is free to select more than one), there's a select button at the bottom right. `),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Once finish the exercise of selecting facilities to be added and upgraded then, user will be able to see the summary of number of facilities  before pressing the confirmation button on the bottom right`),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Then once confirmed the list of all LGA involved in the process will be displayed showing number of new facilities, upgraded facilities,  total HRH need and total annual budget cost. Then to make effect of those changes, user should press save changes button which automatically triggers the analytics.`),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__[/* mdx */ \"b\"])(\"p\",null,`Through view functionality, users can also view where the HRH need comes from and budget by navigating to the action button and selecting the view.`));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}